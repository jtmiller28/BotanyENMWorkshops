{"frames":[{"func":"geom_text(data = stat.test(y = \"bio_3\"), mapping = aes(x = name, \n    y = max(ptExtracteddf[\"bio_3\"] + 1), label = groups), size = 5, \n    inherit.aes = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"layer(data = data, mapping = mapping, stat = stat, geom = GeomText, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes, \n    params = list(parse = parse, check_overlap = check_overlap, \n        na.rm = na.rm, ...))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fortify(data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stat.test(y = \"bio_3\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"aov(as.formula(paste0(y, \"~\", x)), data = dataframe)","file":"","line_number":2,"end_line_number":2,"character_number":5,"end_character_number":64},{"func":"eval(lmcall, parent.frame())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(lmcall, parent.frame())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stats::lm(formula = as.formula(paste0(y, \"~\", x)), data = dataframe, \n    singular.ok = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(mf, parent.frame())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(mf, parent.frame())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stats::model.frame(formula = as.formula(paste0(y, \"~\", x)), data = dataframe, \n    drop.unused.levels = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"model.frame.default(formula = as.formula(paste0(y, \"~\", x)), \n    data = dataframe, drop.unused.levels = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in model.frame.default(formula = as.formula(paste0(y, \"~\", x)),  : \n  argument \"dataframe\" is missing, with no default\n"}